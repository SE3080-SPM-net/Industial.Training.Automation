@model DataAccess.Students

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var startDate = Model.StartDate != null ? Convert.ToDateTime(Model.StartDate).ToString("yyyy-MM-dd") : "";
    var endDate = Model.EndDate != null ? Convert.ToDateTime(Model.EndDate).ToString("yyyy-MM-dd") : "";
    var vivaDate = Model.VivaSheduledDate != null ? Convert.ToDateTime(Model.VivaSheduledDate).ToString("yyyy-MM-dd") : "";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model=>model.StudentsEmail)
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.StudentsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentsName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentsName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudentsID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentsID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentsID, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Faculty, new SelectList(new[] { new SelectListItem { Value = "Computing", Text = "Computing" },
                                                                                           new SelectListItem { Value = "Enginnering", Text = "Enginnering" },
                                                                                           new SelectListItem { Value="Hospitality",Text="Hospitality"},
                                                                                           new SelectListItem { Value="Business",Text="Business"} }, "Value", "Text"), new { @class = "form-control", required = "Select Faculty" })
                    @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudyYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StudyYear, new SelectList(new[] { new SelectListItem { Value = "1st", Text = "1st" },
                                                                                           new SelectListItem { Value = "2nd", Text = "2nd" },
                                                                                           new SelectListItem { Value="3rd",Text="3rd"},
                                                                                           new SelectListItem { Value="4th",Text="4th"} }, "Value", "Text"), new { @class = "form-control", required = "Select study year" })
                    @Html.ValidationMessageFor(model => model.StudyYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudySemester, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StudySemester, new SelectList(new[] { new SelectListItem { Value = "1st Semester", Text = "1st Semester" },
                                                                                           new SelectListItem { Value = "2nd Semester", Text = "2nd Semester" } }, "Value", "Text"), new { @class = "form-control", required = "Select study Semester" })
                    @Html.ValidationMessageFor(model => model.StudySemester, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyPhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SupervisorName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
        <div class="col-md-6">

            <div class="form-group">
                @*@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2">Start Date</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date", @Value = @startDate } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (User.IsInRole("Instructor"))
            {


                <div class="form-group">
                    @Html.LabelFor(model => model.FormI_1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.FormI_1)
                            @Html.ValidationMessageFor(model => model.FormI_1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FormI_3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.FormI_3)
                            @Html.ValidationMessageFor(model => model.FormI_3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FormI_5, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.FormI_5)
                            @Html.ValidationMessageFor(model => model.FormI_5, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FormI_6, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.FormI_6)
                            @Html.ValidationMessageFor(model => model.FormI_6, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FormI_7, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.FormI_7)
                            @Html.ValidationMessageFor(model => model.FormI_7, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date", @Value = @endDate } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VivaSheduledDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VivaSheduledDate, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date", @Value = @vivaDate } })
                        @Html.ValidationMessageFor(model => model.VivaSheduledDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-10 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
