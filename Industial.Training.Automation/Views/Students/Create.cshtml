@model DataAccess.Students

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />


    @if (TempData["ProfileAlreadyExists"] != null)
    {
        <div class="form-group">
            <div class="col-md-10">
                <h4 style="float:left;color:red">@TempData["ProfileAlreadyExists"].ToString()</h4>
            </div>
        </div>

    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.StudentsName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentsName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentsName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Faculty, new SelectList(new[] { new SelectListItem { Value = "Computing", Text = "Computing" },
                                                                                           new SelectListItem { Value = "Enginnering", Text = "Enginnering" },
                                                                                           new SelectListItem { Value="Hospitality",Text="Hospitality"},
                                                                                           new SelectListItem { Value="Business",Text="Business"} }, "Value", "Text"), new { @class = "form-control", required = "Select Faculty" })
                    @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudySemester, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StudySemester, new SelectList(new[] { new SelectListItem { Value = "1st Semester", Text = "1st Semester" },
                                                                                           new SelectListItem { Value = "2nd Semester", Text = "2nd Semester" } }, "Value", "Text"), new { @class = "form-control", required = "Select study Semester" })
                    @Html.ValidationMessageFor(model => model.StudySemester, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.StudentsID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StudentsID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StudentsID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StudyYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StudyYear, new SelectList(new[] { new SelectListItem { Value = "1st", Text = "1st" },
                                                                                           new SelectListItem { Value = "2nd", Text = "2nd" },
                                                                                           new SelectListItem { Value="3rd",Text="3rd"},
                                                                                           new SelectListItem { Value="4th",Text="4th"} }, "Value", "Text"), new { @class = "form-control", required = "Select study year" })
                    @Html.ValidationMessageFor(model => model.StudyYear, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CompanyPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CompanyPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CompanyPhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.SupervisorName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SupervisorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SupervisorName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

   
   

    <div class="form-group">
        <div class="col-md-offset-10 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
